<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>GitHub Integration to Spark</title>
<link href="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.2.3/foundation.min.css" rel="stylesheet" type="text/css"> 
<link href="https://183.82.99.100:8443/CiscoWebcontent/css/collab-ui.css" rel="stylesheet" type="text/css">
<link href="https://183.82.99.100:8443/CiscoWebcontent/css/styles.css" rel="stylesheet" type="text/css">  
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/foundation/6.2.3/foundation.min.js"></script> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.4.0/angular.min.js"></script>
<script src="https://183.82.99.100:8443/CiscoWebcontent/js/collab-formly.js"></script>
<script src="https://183.82.99.100:8443/CiscoWebcontent/js/collab-ui.js"></script>
<script type="text/javascript" src="https://183.82.99.100:8443/CiscoWebcontent/js/porthole.min.js"></script>
<script type="text/javascript" src="https://183.82.99.100:8443/CiscoWebcontent/js/scripts.js"></script>
<script src="https://183.82.99.100:8443/CiscoWebcontent/js/jquery-customselect.js"></script>
<link href="https://183.82.99.100:8443/CiscoWebcontent/css/jquery-customselect.css" rel="stylesheet" type="text/css">
<script>
	integration_app_icon_url="https://183.82.99.100:8443/CiscoWebcontent/images/github/github.png";
	var repo_modified=false;
	var repo_name_old="";
	var selected_repo_id="0";
	var application_id="3";
	var ownerName;
	var ownername_old="";
	var instanceUuid="";
	postMessageToSpark = "GitHub "+postMessageToSpark;
	updateMessageToSpark= "GitHub "+updateMessageToSpark;
	removeMessageToSpark= "GitHub "+removeMessageToSpark;
	$( document ).ready(function() {
	
		application_auth_details_url="/api/applications/"+application_id;
		token_url="/api/integrations/"+integration_id+"/authDetails";
		save_spark_token_url="/api/clients/tokens";
		save_app_token_url="/api/integrations/"+integration_id+"/appTokens";
		get_app_token_url="/api/integrations/"+integration_id+"/appTokens";
		configuration_settings_url="/api/integrations/"+integration_id+"/uiSettings";
		save_configuration_settings_url="/api/integrations/instances";
		update_configuration_settings_url="/api/integrations/instances/";
		delete_instance_url="/api/integrations/instances/";
		list_integration_instances_url="/api/integrations/instances";		
		removeall_integration_instances_url="/api/integrations/instances";		
		delete_spark_token_url="/api/clients/tokens";
		delete_integration_token_url="/api/integrations/"+integration_id+"/appTokens";	
		
		action=action.toLowerCase();

		if(action=="connect") {
			$("#integrations-block").hide();
			$('#integration-form').hide();
			//setIntegrationAppAuthDetails(integration_id);
			validateIntegrationAppTokenDB();
			if(!appTokenExists) {
				setIntegrationAppAuthDetails(integration_id);
			} else {
				loadGitHubForm();
			}
		} else if(action=="disconnect") {
			formAction="disconnect";
			removeAllIntegrationInstances(formAction);
		} else {
			console.log("list");
			listIntegrations();
		}
		$("#github-icon").attr("src", integration_app_icon_url);
		$(".spark-icon").attr("src", spark_icon_url);
		/*$("#github #repos").on('change',function(){
			repo_modified=true;
			console.log("repo_modified....");
		});	
		$("#github #rooms").on('change',function(){
			room_modified=true;
			console.log("room_modified....");
		});	*/
		$("#github #submit-button").click(function (e){
			e.preventDefault();
			console.log("form Action: "+formAction);
			saveGitHubInstance();
		});
		$("#cancel-button").click(function (e){
			e.preventDefault();			
			$('#integration-form').hide();
			$('#integrations-block').show();
			resize();
		});
		$('#github #add-config').click(function(e){
			e.preventDefault();	
			formAction="add";
			if(listResultData.length != 0){
				$("#submit-button").text("Add");
				appTokenExists=true;
			}
			else{
				$("#submit-button").text("Add Integration");				
				validateIntegrationAppTokenDB();				
			}
			if(!appTokenExists) {
				setIntegrationAppAuthDetails(integration_id);
			} else {
				loadGitHubForm();
			}
			
		});
		$('#cancel-remove-integration').click(function(e){
			
			e.preventDefault();
			$('#remove-integration-popup').foundation('close');
		});
		$(document).on("click", "#github #instance-list-block .edit-config" , function(e) {
			console.log("edit instance");
			formAction="update";
			repo_modified=false;
			room_modified=false;
			$("#submit-button").text("Save");
			instanceId=this.id;
			$.each(listResultData,function(index,value){
				if(value["instanceId"]==instanceId) {
					instanceData=value;				
				}
			});
			
			selected_room_id=instanceData.channelId;
			var config=JSON.parse(instanceData.configJson);			
			selected_repo_id=config.repo_id;			
			loadGitHubForm();
			$('#displayName').val(config.displayName);
			resize();		
			instanceUuid = instanceData.instanceUuid;
			console.log("instanceUuid..." + instanceUuid);
			repo_name_old = config.repo_name;
			room_id_old = instanceData.channelId;
			ownername_old = config.owner_name;
			var notifications=config.notifications;
			var events = notifications.events;			
			if($.isArray(events)) {
				$.each(events,function(index,value){
					$("input[type=checkbox][value="+value+"]").prop("checked",true);
				});
			} else {
				$("input[type=checkbox][value="+events+"]").prop("checked",true);
			}
		});	
		$('#repos').on('change', function() {
			var repoDetails = $("#repos option:selected").val();
			var repoargs = repoDetails.split('/');
			ownerName = repoargs[2];
			$("input#ownername").val(ownerName);
		});
			
    });
	function setIntegrationAppAuthDetails() {
		console.log("setIntegrationAppAuthDetails");
		var OAUTHURL    =   '';//specific integration app oauth url
		var CLIENTID    =   '';
		var TYPE        =   'code';
		$.ajax({url: application_auth_details_url,
			async:false,
			success: function(result){
				CLIENTID=result.clientId;
				OAUTHURL= result.authorizationEndpoint				
				OAUTHURL=OAUTHURL+'?client_id='+CLIENTID+'&response_type='+TYPE+'&scope=admin:org admin:org_hook write:repo_hook admin:repo_hook user repo';				
				loginWithAuthDetails(OAUTHURL);	
			},
			error: function (error) {				
				alert('Some problem occured, Pleaase try after some time');
			}
		});		
	}
	function loginWithAuthDetails(oauthURL) {
		console.log("loginWithAuthDetails OAUTHURL..."+oauthURL);
        var win = window.open(oauthURL, "windowname1", 'width=600, height=600'); 
        var pollTimer = window.setInterval(function() { 
            try {
                if (win.document.URL.indexOf("code") != -1) {
					console.log("win.document.URL.indexOf" + win.document.URL.indexOf("code"));
                    window.clearInterval(pollTimer);
                    var url =   win.document.URL;
                    console.log("url..."+url);
                    accessCode =   gup(url, 'code');
                    tokenType = gup(url, 'token_type');
                    expiresIn = gup(url, 'expires_in');
					console.log("accessCode...." + accessCode);
                    win.close();
					getIntegrationAppTokenDetails(accessCode);
                }
            } catch(e) {
				console.log('error while getting authorization code..'+e);
            }
        }, 100);
    }
	function getIntegrationAppTokenDetails(code) {
		console.log("getIntegrationAppTokenDetails");
		var jsonObject={};
		jsonObject["integrationId"] = integration_id;
		jsonObject["authSettings"] = {};
		jsonObject["authSettings"]["code"] = code;
		jsonString=JSON.stringify(jsonObject);
		console.log("getIntegrationAppTokenDetails jsonString..."+jsonString)
		$.ajax({url: token_url,
			async:false,
			type: "POST",
			data: jsonString,
			contentType: "application/json",
			dataType: "json",
			success: function(result){
				var tokenDetails=result["integrationSpecificAuthDetails"]["tokenDetails"];
				var jsonObject={};
				jsonObject["applicationId"] = application_id;
				jsonObject["integrationId"] = integration_id;
				jsonObject["accessToken"] = tokenDetails.access_token;
				jsonObject["expires"] = "3600";
				var jsonString=JSON.stringify(jsonObject);
				saveIntegrationAppToken(jsonString);
			},
			error: function (error) {
				alert('Some problem occured, Pleaase try after some time');
			}
		});
	}
	function saveIntegrationAppToken(jsonData){
		console.log("saveIntegrationAppToken");
		$.ajax({url: save_app_token_url+"?userId="+user_id,
			async:false,
			type: "POST",
			data: jsonData,
			contentType: "application/json",
			dataType: "json",
			success: function(result){
				saveIntegrationTokenResponse="success";
				console.log("saveIntegrationAppToken success");
				connectIntegration();
				loadGitHubForm();
			},
			error: function (error) {
				saveIntegrationTokenResponse="failure";
				console.log("Error occured while saving integration app token: " + error);
				alert('Some problem occured, Pleaase try after some time');
			}
		});	
	}	

	function loadGitHubForm(){
		console.log("loadGitHubForm");
		document.getElementById("form").reset();
		//$('#loading-block').foundation('open');
		$.ajax({
			url: configuration_settings_url+"?userId="+user_id,
			async:true,
			success: function(result){	
				$('#integration-form').show();
				var repos = result["integrationSpecificSettings"]["settings"]["Repos"];
				var rooms = result["sparkRoomSettings"]["items"];
				//$("input#ownername").val(repos[0].owner["login"]);
				//$("input#ownername").val(ownername);
				$("input#userid").val(result["sparkProfileSettings"].id);
				$("input#username").val(result["sparkProfileSettings"].displayName);
				$('#repos')[0].options.length = 1;
				$('#rooms')[0].options.length = 1;
				var authorizedto=result["integrationSpecificSettings"]["settings"]["userDetails"].login;
				if(authorizedto!=""&&authorizedto!=undefined) {
					$('#authenticted-to').html(authorizedto);
					$("input#authenticatedto").val(authorizedto);
					$(".authenticted-block").css("display","block");
				}
				var isReposExists = false;
				$.each(repos, function(id,obj){
					isReposExists = true;
					$("#repos").append($('<option>').text(obj.full_name).attr('value',obj.id+"/"+obj["owner"].type+"/"+obj.owner["login"]));
					
				}); 				
				$.each(rooms, function(id,obj){
					$("#rooms").append($('<option>').text(obj.title).attr('value',obj.id));
				});
				$("#rooms").val(selected_room_id);
				$("#repos").val(selected_repo_id);
				$('.custom-select span').html($("#rooms option:selected").text());
				selected_room_id="0";
				selected_repo_id="0";
				$('#integrations-block').hide();				
				$('#integration-form').show();	
				if(isReposExists) {
					$("input#ownername").val(ownerName);
				} else {
					$('.no-configuration-block').show();
					$('#form').hide();
				}
				//$('#loading-block').foundation('close');
				$("#rooms").customselect();
				resize();			
			},
			error: function (error) {
				// $('#loading-block').foundation('close');
				// $('#integration-form').hide();
				// $('#integrations-block').show();
				$('#integration-form').html("Problem while getting configuration settings");
				 alert('Some problem occured, Pleaase try after some time');
			}
	    });		
    }
 	
    function saveGitHubInstance() {
		console.log("saveGitHubInstance");
		var res = $('form').serializeObject();
		var repoDetails;
		var selectedRoomName=$("#rooms option:selected").text();
		repoDetails = res.repositories;
		var repoargs = repoDetails.split("/");
		var room_id = $("#rooms option:selected").val();
		var repo_name = ($("#repos option:selected").text()).toLowerCase().replace(" ","-");
		var jsonData = {};
		jsonData["channelId"] = room_id;
		jsonData["integrationId"] = integration_id;
		jsonData["status"] = "ACTIVE";
		jsonData["userId"] = $("#userid").val();
		jsonData["messageFormat"]="GitHub Bot :"+"Hello...User";	
        var action_url;
		var actionType;
		
		 if(formAction=="update") {
			jsonData["instance_id"] = instanceId;
			jsonData["repo_name_old"] = repo_name_old;
			jsonData["room_id_old"] = room_id_old;
			if(room_id!=room_id_old) {
				room_modified=true;
				jsonData["messageToSpark"] = updateMessageToSpark;
			} else {
				room_modified=false;
			}
			if(repo_name_old!=repo_name) {
				repo_modified=true;
			} else {
				repo_modified=false;
			}
			jsonData["room_modified"] = room_modified;
			jsonData["repo_modified"] = repo_modified;
			jsonData["ownername_old"] = ownername_old;
			jsonData["instanceUuid"] = instanceUuid;
			jsonData["configJson"]=JSON.parse(instanceData.configJson);
			action_url = update_configuration_settings_url+instanceId;
			actionType = "PUT";
			console.log("update integration");
			$('.loading-first-block').html('Please wait while your Integration is being updated');
		 } else{
			jsonData["configJson"]={};
		    action_url = save_configuration_settings_url;
			actionType = "POST";
			jsonData["messageToSpark"] = postMessageToSpark;
			console.log("save integration");
			$('.loading-first-block').html('Please wait while your Integration is being set up');
		}
		console.log("owner name............." + $("#ownername").val());
		jsonData["configJson"]["room_name"]= selectedRoomName;
		jsonData["configJson"]["repo_id"]= res.repositories;
		jsonData["configJson"]["repo_name"]= repo_name;
		jsonData["configJson"]["user_name"] = $("#username").val();
		jsonData["configJson"]["owner_name"]=$("#ownername").val();
		jsonData["configJson"]["authenticated_to"]= $("#authenticatedto").val();
		jsonData["configJson"]["repo_type"]= repoargs[1];
		jsonData["configJson"]["displayName"]= res.displayName;
		jsonData["configJson"]["notifications"]={};			
		jsonData["configJson"]["notifications"]["events"] = res.events;

		var jsonString = JSON.stringify(jsonData);
		var notificationslength = objLength(res.events);
		
		if($('#repos').val()==0){
			alert("Please select Repository");
		} else if(notificationslength==0) {
			alert("Please select atleast one Event");
		}  else if($('#rooms').val()==0){
			alert("Please select Room");
		}else { 
			$('.loading-second-block').html('Selected Room is '+ selectedRoomName);
			$('#loading-block').foundation('open');
			$.ajax({url: action_url+"?userId="+user_id,
				async: true,
				type: actionType,
				data: jsonString,
				contentType: "application/json",
				dataType: "json",
				success: function(result){				
					$('#loading-block').foundation('close');
					$('#success-integration').foundation('open');
				},
				error: function (error) {
					//listIntegrations();
					$('#loading-block').foundation('close');
					console.log('error while saving integration instance details..' + error);
					alert('Some problem occured, Pleaase try after some time');
				}
			});
			$('.loading-first-block').html('Please wait just a moment while your app is loading');
			$('.loading-second-block').html('');
		}
		console.log(jsonString); 
	}
</script>
</head>
<body>
	<div class="integration-app" id="github">
		<div id="loading-block" class="reveal" data-reveal data-options="closeOnClick:false;closeOnEsc:false;">
			<div class="loading"><img class="spark-icon" src="" alt="....."></div>
			<div class="loading-div-background">
				<div class="loading-first-block">Please wait just a moment while your app is loading</div>
				<div class="loading-second-block">name and room name</div>
				<br><br>
				<div class="loading-bar"><div class="loading-background"></div>	</div>
			</div>
		</div>
		<div id="success-integration" class="reveal" data-reveal data-options="closeOnClick:false;closeOnEsc:false;">
			<div class="loading">
				<img class="spark-icon" src="" alt=".....">
			</div>
			<div class="success-integration-first-block">Well done! Your configuration has been set up and is ready to use.</div>
			<div class="large-5 medium-5 columns buttons-block">
				<div class="success-integration-second-block">
					<!--<button class="button" id="room-button">Go to
						Content Testing Room</button>-->
					<button class="secondary button" id="done-button">Done</button>
				</div>
			</div>
		</div>
		<div class="reveal" id="remove-integration-popup" data-reveal data-options="closeOnClick:false;closeOnEsc:false;">
			<div class="large-12 columns desktop-block">			    
				<div class="row">
					<div class="large-2 medium-2 columns"><img alt="" id="github-icon" src=""/></div>
					<div class="large-6 medium-6 columns" style="float:left;">
						<label id="displayName-label"></label>
						<label id="addedon-label"></label>
					</div>
				</div><br>
				<div class="msg-labels"><label id="remove-msg"></label> <label id="remove-auth"></label></div>				
				<button class="close-button" data-close aria-label="Close modal" type="button">
					<span aria-hidden="true">&times;</span>
				</button><br><br>
				<button class="button remove-integration-btn" id="remove-integration-btn" style="float:right">Remove</button>
			</div>
			<div class="large-12 columns mobile-block">	
				<div class="msg-labels"><label id="remove-msg-mobile"></label> <label id="remove-auth-mobile"></label></div>				
				<div class="option-buttons remove-integration-buttons">
					<label class="remove-popup-cancel"> 
						<a href="#" id="cancel-remove-integration">cancel</a>
					</label>
					<label class="remove-popup-remove">
						<a href="#" id="remove-integration-btn-mobile" class="remove-integration-btn">remove</a>
					</label>
				</div>
			</div>
		</div>
		<div class="integrations" id="integrations-block">
			<div id="home">
				<div class="row add-config-block">
					<div class="large-12 medium-12 columns">							
						<div class="large-6 medium-6 columns config-name"><label>GitHub Configuration</label></div>
						<div class="large-6 medium-6 columns">
							<button class="button" data-open="remove-integration-popup" id="remove-all-config">Remove All</button>
							<button class="secondary button" id="add-config">Add</button>
						</div>					
					</div>
				</div>
				<div id="instance-list-block" class="row instance-list-block">						
				</div>
			</div>
		</div>
		<div class="large-12 columns" id="integration-form">
			<div class="authenticted-block">Authenticated to GitHub as: <span id="authenticted-to"></span></div>
			<div class="no-configuration-block" style="display:none">There are no repositories available in your GitHub Account. Please create repostories in your account and configure<br></div>
			<form name="form" id="form" method="post">
				<div class="row app-config-block">
					<div class="large-12 columns sub-config-block">
						<h3 class="heading-01">GitHub Configuration</h3>
						<!-- <label><b>GitHub Repository</b></label>
						<div class="large-4 medium-4 columns">Which repository should we listen to events on?</div>-->
						<div class="large-10 medium-10 columns" style="float:left;">
							<div class="large-3 medium-3 columns"><label class="label-config">GitHub Repository</label></div>						
							<div class="large-6 medium-6 columns text left">
								<select name="repositories"  id="repos" class="dropdown"><option value="0" hidden>Select</option></select><span class="has-tip tip-right" id="tooltip" title="Repository, for which you'd receive notifications"
								data-tooltip><img class="tool-tip"></span>
							</div>	
						</div>						
					</div>
				</div>
				<div class="row">
					<div class="large-12 columns">
						<div class="large-12 medium-12 columns events">
							<label>Events</label>
							<div id="events" class="events-sub">
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="branch_tag_created" name="events" value="create"/><label for="branch_tag_created">Branch or Tag created</label></div>
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="branch_tag_deleted" name="events" value="delete"/><label for="branch_tag_deleted">Branch or Tag deleted</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="pull_request" name="events" value="pull_request"/><label for="pull_request">Pull requests</label></div>	
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="commit_comments" name="events" value="commit_comment"/><label for="commit_comments">Commit comments</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="pull_request_comment" name="events" value="pull_request_review_comment"/><label for="pull_request_comment">Pull request comments</label></div>
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="deployment" name="events" value="deployment"/><label for="deployment">Deployment</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="push" name="events" value="push"/><label for="push">Pushes</label></div>	
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="deployment_status" name="events" value="deployment_status"/><label for="deployment_status">Deployment status</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="release" name="events" value="release"/><label for="release">Releases</label></div>
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="fork" name="events" value="fork"/><label for="fork">Forks</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="stars" name="events" value="watch"/><label for="stars">Stars</label></div>	
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="issue" name="events" value="issues"/><label for="issue">Issues</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="status" name="events" value="status"/><label for="status">Status</label></div>
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="issue_comment" name="events" value="issue_comment"/><label for="issue_comment">Issue comments</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="team_add" name="events" value="team_add"/><label for="team_add">Team adds</label></div>	
									<div class="large-3 medium-3 columns checkbox"><input type="checkbox" id="member" name="events" value="member"/><label for="member">Members</label></div>
								</div>
								<div class="large-12 medium-12 columns">
									<div class="large-4 medium-4 columns checkbox"><input type="checkbox" id="wiki_page" name="events" value="gollum"/><label for="wiki_page">Wiki pages</label></div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row spark-config-block">
					<div class="large-10 medium-10 columns">
						<h3 class="heading-01">Spark Configuration</h3>
						<div class="large-8 columns sub-config-block">
							<div class="large-2 medium-2 columns small-mobile">
								<label>Room</label>
							</div>
							<div class="large-5 medium-4 columns text left input-small-mobile">
								<select name="room" id="rooms" class="custom-select">
								<option value='0'>Please Select</option></select><span class="has-tip tip-right" id="tooltip" title="Room in which you'd receive notifications for this configuration"
									data-tooltip><img class="tool-tip"></span>
							</div>
						</div>
						<div class="large-8 columns sub-config-block">
							<div class="large-2 medium-2 columns small-mobile">
								<label>Name</label>
							</div>
							<div class="large-5 medium-4 columns text left input-small-mobile">
								<input type="text" name="displayName" id="displayName" class="integration-name"	value="">
							</div>
							<input type="hidden" name="userid" id="userid" value="">
							<input type="hidden" name="username" id="username" value="">
							<input type="hidden" name="authenticatedto" id="authenticatedto" value="">
							<input type="hidden" name="ownername" id="ownername" value="">
						</div>
					</div>
				</div>
				<div class="row integration-config-block">
					<div class="large-5 medium-5 columns" >&nbsp;</div>
					<div class="large-4 medium-4 columns left" >
						<button class="button" id="cancel-button">Cancel</button>
						<button class="button secondary text" id="submit-button">Add Integration</button>
					</div>
				</div>
			</form>
		</div>
	</div>
</body>
</html>